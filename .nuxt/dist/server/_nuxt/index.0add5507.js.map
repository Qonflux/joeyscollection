{"version":3,"file":"index.0add5507.js","sources":["../../../../store/games.js","../../../../components/FilterOverlay.vue","../../../../components/GamesPagination.vue","../../../../pages/index.vue"],"sourcesContent":["import { defineStore } from 'pinia'\n\nconst state = () => ({\n  games: [],\n  filteredGames: [],\n  hasFiltered: false\n})\n\nconst getters = {}\n\nconst actions = {\n  setGames (games) {\n    this.games = games\n  },\n  setFilteredGames (games) {\n    this.games = games\n  },\n  setHasFiltered (bool) {\n    this.hasFiltered = bool\n  },\n  async getAllGames () {\n    const baseUrl = useRuntimeConfig().public.API_URL;\n    const { data: games } = await useFetch(`${baseUrl}/api/games`)\n    return games\n  },\n  async removeFilters () {\n    this.hasFiltered = false\n    const games = await this.getAllGames()\n    this.setGames(games.value)\n  }\n}\n\nexport const UseGameStore = defineStore('gameStore', {\n  state,\n  getters,\n  actions\n}) ","<template>\n  <Teleport to=\"body\">\n    <!-- Black background -->\n    <transition name=\"dialog\">\n      <div\n        v-if=\"show\"\n        class=\"z-50 fixed w-full h-screen flex items-center\"\n        style=\"background: rgba(0,0,0,0.5);\"\n        @click.self=\"handleClose\"\n      >\n        <!-- Slide -->\n        <transition \n          enter-class=\"translate-x-full\" \n          leave-to-class=\"-translate-x-full\"\n          enter-active-class=\"transition-all duration-200 ease-in\"\n          leave-active-class=\"transition-all duration-200 ease-out\"\n        >\n          <div\n            v-if=\"showOverlay\"\n            class=\"flex flex-col h-screen z-70 shadow-md bg-gray-800 text-sm relative mr-auto w-screen sm:w-100 transform p-4 overflow-y-auto overflow-x-hidden\"\n          >\n            <!-- Head -->\n            <div class=\"flex text-lg\">\n              <h2>Filters</h2>\n              <div class=\"ml-auto cursor-pointer font-bold\" @click=\"emit('close')\">X</div>\n            </div>\n\n            <hr class=\"my-3\">\n            <input v-model=\"search\" type=\"text\" placeholder=\"Zoeken op naam...\" class=\"rounded-md p-2 text-black\">\n            <hr class=\"my-3\">            \n\n            <!-- Genres -->\n            <h3>Genres</h3>\n            <div v-for=\"qty, genre in genres\" :key=\"genre\" class=\"flex gap-1.5 w-60\">\n              <input :id=\"genre\" v-model=\"checkedGenres\" type=\"checkbox\" :value=\"genre\">\n              <label :for=\"genre\" class=\"text-sm\"> {{ genre }}</label><br>\n              <p class=\"ml-auto text-gray-500\">{{ qty }}</p>\n            </div>\n\n            <!-- Finished -->\n            <h3 class=\"mt-6\">Uitgespeeld</h3>\n            <div v-for=\"qty, complete in completed\" :key=\"complete\" class=\"flex gap-1.5 w-40\">\n              <input :id=\"complete\" v-model=\"checkedCompleted\" type=\"checkbox\" :value=\"complete\">\n              <label :for=\"complete\" class=\"text-sm\"> {{ complete }}</label><br>\n              <p class=\"ml-auto text-gray-500\">{{ qty }}</p>\n            </div>\n\n            <!-- Platforms -->\n            <h3 class=\"mt-6\">Platformen</h3>\n            <div v-for=\"qty, platform in platforms\" :key=\"platform\" class=\"flex gap-1.5 w-88\">\n              <input :id=\"platform\" v-model=\"checkedPlatforms\" type=\"checkbox\" :value=\"platform\">\n              <label :for=\"platform\" class=\"text-sm\"> {{ platform }}</label><br>\n              <p class=\"ml-auto text-gray-500\">{{ qty }}</p>\n            </div>\n\n            <button \n              class=\"bg-violet-600 hover:bg-violet-800 rounded-md font-bold py-2 px-4 my-3 transition duration-200\" \n              @click=\"setFilters(false)\"\n            >\n              Filters toepassen\n            </button>\n\n            <div class=\"flex gap-3\">\n              <button \n                class=\"bg-gray-600 hover:bg-gray-700 rounded-md font-bold py-2 px-4 transition duration-200 w-full\" \n                @click=\"setFilters(true)\"\n              >\n                Kies game!\n              </button>\n              <button \n                class=\"bg-gray-600 hover:bg-gray-700 rounded-md font-bold py-2 px-4 transition duration-200 w-full\" \n                @click=\"gameStore.removeFilters()\"\n              >\n                Filters verwijderen\n              </button>\n            </div>\n          </div>\n        </transition>\n      </div>\n    </transition>\n  </Teleport>\n</template>\n\n<script setup>\nimport { UseGameStore } from '~/store/games'\nconst gameStore = UseGameStore()\nconst { $showToast } = useNuxtApp()\n\nconst props = defineProps({\n  show: {\n    type: Boolean,\n    required: true\n  }\n})\n\nconst emit = defineEmits(['close', 'reset-page'])\n\nconst search = ref('')\n\nconst genres = reactive({})\ngameStore.games.forEach(game => {\n  game.genres.forEach(genre => {\n    if (!Object.prototype.hasOwnProperty.call(genres, genre)) genres[genre] = 1\n    else genres[genre]++\n  })\n})\n\nconst completed = reactive({})\ngameStore.games.forEach(game => {\n  if (game.completed) {\n    if (!Object.prototype.hasOwnProperty.call(completed, 'Uitgespeeld')) completed['Uitgespeeld'] = 1\n    else completed['Uitgespeeld']++\n  } else { \n    if (!Object.prototype.hasOwnProperty.call(completed, 'Niet uitgespeeld')) completed['Niet uitgespeeld'] = 1\n    else completed['Niet uitgespeeld']++\n  }\n})\n\nconst platforms = reactive({})\ngameStore.games.forEach(game => {\n  if (!Object.prototype.hasOwnProperty.call(platforms, game.platform)) platforms[game.platform] = 1\n    else platforms[game.platform]++\n})\n\nconst checkedGenres = ref([])\nconst checkedCompleted = ref([])\nconst checkedPlatforms = ref([])\n\nconst showOverlay = ref(false)\n\nwatch(() => props.show, (newVal) => {\n  nextTick(() => {\n    if (newVal) {\n      showOverlay.value = true\n      toggleHtmlClass('add', 'overflow-y-hidden')\n    } else {\n      toggleHtmlClass('remove', 'overflow-y-hidden')\n    }\n  })\n})\n\nconst toggleHtmlClass = (addRemoveClass, className) => {\n  const el = document.documentElement\n  addRemoveClass === 'add' ? el.classList.add(className) : el.classList.remove(className)\n}\n\nconst handleClose = () => {\n  showOverlay.value = false\n  setTimeout(() => {\n    emit('close')\n  }, 200)\n}\n\nconst setFilters = async (pickRandom) => {\n  let filteredGames = []\n  let games\n  if (gameStore.hasFiltered)  {\n    ({ value: games } = await gameStore.getAllGames())\n  } else {\n    games = JSON.parse(JSON.stringify(gameStore.games))\n  } \n\n  // Filter genres\n  if (checkedGenres.value.length > 0) {\n    filteredGames = games.filter(game => game.genres.some(game => checkedGenres.value.includes(game)))\n  }\n\n  // Filter search\n  if (search.value.length > 0) {\n    filteredGames = filteredGames.length > 0 ? filteredGames : games\n    filteredGames = filteredGames.filter(game => game.name.toLowerCase().includes(search.value.toLowerCase()))\n  }\n\n  // Filter completed\n  if (checkedCompleted.value.length > 0) {\n    filteredGames = filteredGames.length > 0 ? filteredGames : games\n    filteredGames = filteredGames.filter((game) => {\n      return (checkedCompleted.value.includes('Uitgespeeld') && game.completed) ||\n        (checkedCompleted.value.includes('Niet uitgespeeld') && !game.completed)\n    })\n  }\n\n  // Filter platforms\n  if (checkedPlatforms.value.length > 0) {\n    filteredGames = filteredGames.length > 0 ? filteredGames : games\n    filteredGames = filteredGames.filter(game => checkedPlatforms.value.includes(game.platform))\n  }\n\n  if (filteredGames.length > 0) {\n    gameStore.setHasFiltered(true)\n    if (pickRandom) {\n      filteredGames = [filteredGames[Math.floor(Math.random() * filteredGames.length)]]\n    }\n    gameStore.setGames(filteredGames)\n    emit('reset-page')\n    handleClose()\n  } else {\n    $showToast('Niks gevonden!', 'warning');\n  }\n}\n</script>\n\n<style scoped>\n.dialog-enter-from,\n.dialog-leave-to {\n  opacity: 0;\n  transform: scale(1.1);\n}\n\n.dialog-enter-active {\n  transition: all 0.2s ease-out;\n}\n\n.dialog-leave-active {\n  transition: all 0.2s ease-in;\n}\n\n.dialog-enter-to,\n.dialog-leave-from {\n  opacity: 1;\n  transform: scale(1);\n}\n\n.w-88 {\n  width: 22rem;\n}\n</style>","<template>\n  <div class=\"flex justify-between\">\n    <!-- Previous button -->\n    <GamesPaginationButton \n      :is-disabled=\"props.currentPage === 0\" \n      class=\"hidden sm:block\"\n      @click=\"emit('prev')\"\n    >\n      <font-awesome-icon icon=\"fa-solid fa-angle-left\" />\n    </GamesPaginationButton>\n\n    <div class=\"flex gap-2 mx-auto\">\n      <!-- First page -->\n      <GamesPaginationButton :is-disabled=\"props.currentPage === 0\" @click=\"emit('change', 0)\">\n        1\n      </GamesPaginationButton>\n\n      <p v-if=\"props.currentPage > 3\" class=\"mt-auto mb-2.5\">...</p>\n\n      <!-- Previous pages -->\n      <GamesPaginationButton \n        v-for=\"num in prevRange\"\n        :key=\"num\"\n        :is-disabled=\"num === props.currentPage\"\n        @click=\"emit('change', num)\"\n      >\n        {{ num + 1 }}\n      </GamesPaginationButton>\n\n      <!-- Current page -->\n      <GamesPaginationButton v-if=\"currentPage !== 0 && currentPage !== lastPage\" is-disabled>\n        {{ currentPage + 1 }}\n      </GamesPaginationButton>\n\n      <!-- Next pages -->\n      <GamesPaginationButton \n        v-for=\"num in nextRange\"\n        :key=\"num\"\n        :is-disabled=\"num === props.currentPage\"\n        @click=\"emit('change', num)\"\n      >\n        {{ num + 1 }}\n      </GamesPaginationButton>\n\n      <p v-if=\"lastPage - currentPage > 3\" class=\"mt-auto mb-2.5\">...</p>\n\n      <!-- Last page -->\n      <GamesPaginationButton :is-disabled=\"props.currentPage === lastPage\" @click=\"emit('change', lastPage)\">\n        {{ lastPage + 1 }}\n      </GamesPaginationButton>\n    </div>\n\n    <!-- Next button -->\n    <GamesPaginationButton \n      class=\"hidden sm:block\"\n      :is-disabled=\"props.currentPage === lastPage\" \n      @click=\"emit('next')\"\n    >\n      <font-awesome-icon icon=\"fa-solid fa-angle-right\" />\n    </GamesPaginationButton>\n  </div>\n</template>\n\n<script setup>\nimport { UseGameStore } from '~/store/games'\nconst gameStore = UseGameStore()\n\nconst props = defineProps({\n  currentPage: {\n    type: Number,\n    default: 0\n  },\n  numPerPage: {\n    type: Number,\n    default: 30\n  }\n})\n\nconst emit = defineEmits(['next', 'prev', 'change'])\n\n/* const visibleBtns = ref(7) */\n\nconst lastPage = computed(() => Math.ceil(gameStore.games.length / props.numPerPage) - 1)\n\nconst prevRange = computed(() => {\n  const nums = []\n  let curr = props.currentPage\n  let i = 0\n  while (i < 3 && curr >= 1) {\n    if (curr !== props.currentPage)\n    nums.push(curr)\n    i++\n    curr--\n  }\n  return nums.reverse()\n})\n\nconst nextRange = computed(() => {\n  const nums = []\n  let curr = props.currentPage\n  let i = 0\n  while (i < 3 && curr < lastPage.value) {\n    if (curr !== props.currentPage) nums.push(curr)\n    i++\n    curr++\n  }\n  return nums\n})\n</script>","<template>\n  <div>\n    <FilterOverlay :show=\"openFilters\" @reset-page=\"page = 0\" @close=\"openFilters = false\" />\n\n    <!-- Stats and filters -->\n    <div class=\"flex justify-between text-sm mb-3\">\n      <div class=\"text-gray-500\">{{ gameStore.games?.length }} game<span v-if=\"gameStore.games?.length > 1\">s</span></div>\n      <p>\n        Sorteren: <span class=\"text-gray-500 cursor-pointer\" @click=\"changeSorting\">{{ sortingValue }}</span> \n        <font-awesome-layers class=\"cursor-pointer\" @click=\"toggleSorted\">\n          <font-awesome-icon icon=\"sort-down\" :class=\"{'text-gray-500': isSortedUp}\" />\n          <font-awesome-icon icon=\"sort-up\" :class=\"{'text-gray-500': !isSortedUp}\" />\n        </font-awesome-layers>\n      </p>\n      <p class=\"text-violet-500 cursor-pointer\">\n        <span @click=\"openFilters = true\"><font-awesome-icon icon=\"fa-solid fa-filter\" /> Filters</span>\n        <font-awesome-icon v-if=\"gameStore.hasFiltered\" icon=\"fa-solid fa-circle-xmark\" class=\"text-gray-500 ml-1\" @click=\"gameStore.removeFilters()\" />\n      </p>\n    </div>\n\n    <div class=\"grid grid-cols-12 gap-4 mb-1\">\n      <div v-for=\"game in gamesArray.slice(page * numPerPage, page * numPerPage + numPerPage)\" id=\"game\" :key=\"game._id\" class=\"col-span-6 sm:col-span-4 lg:col-span-3 xl:col-span-2 relative\">\n        <img :src=\"game.cover\" class=\"mx-auto rounded-md transition duration-200 border-2 border-gray-700 h-full\">\n        <div class=\"info absolute top-4 left-0 opacity-0 transition duration-200 w-full\">\n          <h3 class=\"text-center\">{{ game.name }}</h3>\n          <p class=\"text-center mt-3\">Release: {{ game.releaseDate }}</p>\n          <p class=\"text-center mt-3\">Platform: <img :src=\"getImage(game.platform)\" class=\"inline\"></p>\n          <p class=\"text-center mt-3\">\n            Uitgespeeld: <font-awesome-icon :icon=\"`fa-solid fa-${game.completed ? 'check-circle' : 'circle-xmark'}`\" :class=\"game.completed ? 'text-green-500' : 'text-red-500'\" />\n          </p>\n        </div>\n\n        <!-- Tags -->\n        <div class=\"info absolute bottom-2 left-2 opacity-0 transition duration-200 text-xxs flex gap-2 flex-wrap\">\n          <div v-for=\"genre in game.genres\" :key=\"genre\" class=\"bg-violet-600 pt-1 pb-0.5 px-2 rounded-full\">\n            {{ genre }}\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Pagination -->\n    <GamesPagination \n      v-if=\"gameStore.games.length > numPerPage\" \n      :current-page=\"page\"\n      :num-per-page=\"numPerPage\"\n      :num-games=\"gameStore.games.length\"\n      @next=\"nextPage\"\n      @prev=\"previousPage\"\n      @change=\"page = $event\"\n    />\n  </div>\n</template>\n\n<script setup>\nimport { UseGameStore } from '~/store/games'\nconst gameStore = UseGameStore()\n\n// Get and set games in store \nconst games = await gameStore.getAllGames()\ngameStore.setGames(games)\n\nconst openFilters = ref(false)\nconst page = ref(0)\nconst numPerPage = ref(30)\nconst isSortedUp = ref(false)\nconst sorting = ref('date')\n\nconst getImage = (platform) => {\n  let img = '/images/'\n  if (platform === 'Nintendo Entertainment System (NES)') {\n    img += 'nes.png'\n  } else if (platform === 'Super Nintendo Entertainment System (SNES)') {\n    img += 'snes.png'\n  } else if (platform === 'Nintendo 64') {\n    img += 'n64.png'\n  } else if (platform === 'Nintendo GameCube') {\n    img += 'gc.png'\n  } else if (platform === 'Wii') {\n    img += 'wii.png'\n  } else if (platform === 'Wii U') {\n    img += 'wii-u.png'\n  } else if (platform === 'Nintendo Switch') {\n    img += 'switch.png'\n  } else if (platform === 'Game Boy') {\n    img += 'gb.png'\n  } else if (platform === 'Game Boy Color') {\n    img += 'gbc.png'\n  } else if (platform === 'Game Boy Advance') {\n    img += 'gba.png'\n  } else if (platform === 'Nintendo DS') {\n    img += 'ds.png'\n  } else if (platform === 'Nintendo 3DS') {\n    img += '3ds.png'\n  } else if (platform === 'PlayStation') {\n    img += 'ps.png'\n  } else if (platform === 'PlayStation 2') {\n    img += 'ps2.png'\n  } else if (platform === 'PlayStation 3') {\n    img += 'ps3.png'\n  } else if (platform === 'PlayStation 4') {\n    img += 'ps4.png'\n  } else if (platform === 'Xbox') {\n    img += 'xbox.png'\n  } else if (platform === 'Xbox 360') {\n    img += 'xbox-360.png'\n  } else if (platform === 'Xbox One') {\n    img += 'xbox-one.png'\n  } else {\n    img += 'md.png'\n  }\n  return img\n}\n\nconst sortingValue = computed(() => {\n  return sorting.value === 'date' ? 'Toegevoegd' : 'Alfabetisch'\n})\n\nconst gamesArray = computed(() => {\n  let games = [...gameStore.games]\n  if (sorting.value === 'alphabet') {\n    games = games.sort((a, b) => a.name.localeCompare(b.name))\n  }\n  const reversedGames = games.slice().reverse()\n  return isSortedUp.value ? reversedGames : games\n})\n\nconst previousPage = () => {\n  if (page.value !== 0) page.value--\n}\n\nconst nextPage = () => {\n  page.value++\n}\n\nconst toggleSorted = () => {\n  isSortedUp.value = !isSortedUp.value\n}\n\nconst changeSorting = () => {\n  if (sorting.value === 'date') sorting.value = 'alphabet'\n  else sorting.value = 'date'\n}\n</script>\n\n<style scoped lang=\"postcss\">\n#game:hover > .info {\n  opacity: 100%;\n}\n\n#game:hover > img {\n  @apply brightness-50;\n}\n\n.text-xxs {\n  font-size: 0.625rem;\n}\n</style>"],"names":["games"],"mappings":"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"}